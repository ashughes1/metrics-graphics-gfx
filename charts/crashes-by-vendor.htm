<div class='row trunk-section' style='text-align:center; margin-top:-40px'>
    <h4 style="width:100%; text-align:center;"><u>Graphics Crash Rate by GPU Vendor</u></h4>
    <div style="width: 50%; margin-left: 25%; font-size: small; text-align: left;">
        Graphs the crash rate in Graphics<sup>1</sup> for all active Firefox installations<sup>2</sup>
        on a given date, broken down by GPU Vendor. A value over 1.0 effectively means more than one crash per user on average.
        <br /><br />
        <sup>1</sup><span style="font-size: x-small"> Any crash report with a signature in <i>gfx</i>, <i>layers</i>, or <i>canvas</i></span><br />
        <sup>2</sup><span style="font-size: x-small"> The total number of unique Firefox installations based on <a href="https://crash-stats.mozilla.com/documentation/supersearch/examples/#installations">installation time</a>.</span>
    </div>
    <br />
    <div class='btn-group btn-group-sm text-center split-by-controls'>
      <button type='button' class='btn btn-default active' data-y_accessor='All'>All</button>
      <button type='button' class='btn btn-default' data-y_accessor='amd'>AMD</button>
      <button type='button' class='btn btn-default' data-y_accessor='intel'>Intel</button>
      <button type='button' class='btn btn-default' data-y_accessor='nvidia'>Nvidia</button>
    </div>
    <div class='col-lg-12 text-left' id='chart'></div>
</div>

<script>
    var globals = {};

    var split_by_params = {
        width: 1190,
        height: 300,
        right:40,
        target: document.getElementById('chart'),
        x_accessor: "date",
        interpolate: "monotone",
        chart_type: "line",
        max_y:2.0,
        linked:true,
        markers: [{
          'date': new Date('2015-12-14T00:00:00.000Z'),
          'label': '43.0'
        },{
          'date': new Date('2016-01-25T00:00:00.000Z'),
          'label': '44.0'
        },{
          'date': new Date('2016-03-08T00:00:00.000Z'),
          'label': '45.0'
        }]
    };

    $('.split-by-controls button').click(function() {
      var new_y_accessor = $(this).data('y_accessor');
      if (new_y_accessor == "All") {
        split_by_params.y_accessor = ['amd','intel','nvidia'];
        split_by_params.legend = ['AMD','Intel','Nvidia'];
      } else {
        split_by_params.y_accessor = new_y_accessor;
        split_by_params.legend = new_y_accessor;
      }
      // change button state
      $(this).addClass('active').siblings().removeClass('active');
      // update data
      delete split_by_params.yay_format;
      MG.data_graphic(split_by_params);
    });

    function convertDate(d) {
        var day = (d.getDate() < 10) ? '0' + d.getDate().toString() : d.getDate().toString();
        var month = ((d.getMonth()+1) < 10) ? '0' + (d.getMonth()+1).toString() : (d.getMonth()+1).toString();
        var year = d.getFullYear().toString();
        return year + '-' + month + '-' + day;
    }
    
    function findChartIndex(datestamp) {
        var result = -1;
        for (var i=0; i<chart_data.length; i++) {
            if (chart_data[i].date == datestamp) result = i;
        }
        return result;
    }

    function loadRemoteData(vendor_id) {
       var start = convertDate(new Date((new Date()).valueOf()-180*24*60*60*1000));
       var url = "https://crash-stats.mozilla.com/api/SuperSearch/?"
            + "product=Firefox"
            + "&signature=~gfx&signature=~layers&signature=~canvas"
            + "&signature=~glcontext&signature=~d3d&signature=~d2d"
            + "&signature=~dwrite&signature=~skia&signature=~mesa"
            + "&signature=~cairo&signature=^amd&signature=^ati"
            + "&signature=^igd&signature=^nv"
            + "&adapter_vendor_id=" + vendor_id
            + "&date=%3E%3D" + start
            + "&_histogram.date=_cardinality.install_time&_histogram_interval=1d";
       d3.json(url, function(data) {
            if (!data) return new Error("Unable to load JSON data!");
            var histogram_date = data.facets.histogram_date;
            for (var i in histogram_date) {
                var item = {
                    "date":histogram_date[i].term.substring(0,10),
                    "reports":histogram_date[i].count,
                    "installs":histogram_date[i].facets.cardinality_install_time.value
                };
       
                var index = findChartIndex(item.date);
                if (index == -1) {
                    chart_data.push({"date":item.date, "amd":0, "intel":0, "nvidia":0});
                    index = chart_data.length-1;
                }
                if (vendor_id == "0x1002") chart_data[index].amd = (item.reports/item.installs).toFixed(2);
                if (vendor_id == "0x8086") chart_data[index].intel = (item.reports/item.installs).toFixed(2);
                if (vendor_id == "0x10de") chart_data[index].nvidia = (item.reports/item.installs).toFixed(2);
               
                if (i == histogram_date.length-1) {
                    if (vendor_id == "0x8086") {
                        loadRemoteData("0x1002");
                    } else if (vendor_id == "0x1002") {
                        loadRemoteData("0x10de");
                    } else {
                        graph();
                    }
                }
           }
       });
    }

    function graph() {
        var data = MG.convert.date(chart_data, 'date');
        globals.data = data;
        split_by_params.data = data;
        split_by_params.y_accessor = ['amd','intel','nvidia'];
        split_by_params.legend = ['AMD','Intel','Nvidia'];
        MG.data_graphic(split_by_params);
    }

    MG._hooks = {};

    var chart_data = [];
    d3.json('data/crashes-by-vendor.json', function(data) {
       if (!data) return new Error("Unable to load JSON data!");
       for (var i=0; i<data.length; i++) {
          chart_data.push(data[i]);
          if (chart_data.length >= data.length) loadRemoteData("0x8086");
       }
    });

    //d3.json('data/crashes-by-vendor.json', function(data) {
    //    data = MG.convert.date(data, 'date');
    //    globals.data = data;
    //    split_by_params.data = data;
    //    split_by_params.y_accessor = ['amd','intel','nvidia'];
    //    split_by_params.legend = ['AMD','Intel','Nvidia'];
    //   MG.data_graphic(split_by_params);
    //});
</script>
