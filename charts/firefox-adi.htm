<div class='row trunk-section'>
    <div class='col-lg-12'>
        <div class='col-lg-4' id='chart_percent_change_month'></div>
        <div class='col-lg-4' id='chart_percent_change_quarter'></div>
        <div class='col-lg-4' id='chart_percent_change_half'></div>
        <div class='col-lg-12' id='chart_release'></div>
        <div class='col-lg-12' id='chart_beta'></div>
        <div class='col-lg-12' id='chart_aurora'></div>
        <div class='col-lg-12' id='chart_nightly'></div>
    </div>
</div>

<script>
    var markers = {
        "release": [{
          'date': new Date('2015-06-03T00:00:00.000Z'),
          'label': '39'
        },{
          'date': new Date('2015-08-11T00:00:00.000Z'),
          'label': '40'
        },{
          'date': new Date('2015-09-22T00:00:00.000Z'),
          'label': '41'
        },{
          'date': new Date('2015-11-03T00:00:00.000Z'),
          'label': '42'
        },{
          'date': new Date('2015-12-15T00:00:00.000Z'),
          'label': '43'
        },{
          'date': new Date('2016-01-26T00:00:00.000Z'),
          'label': '44'
        },{
          'date': new Date('2016-03-08T00:00:00.000Z'),
          'label': '45'
        },{
          'date': new Date('2016-04-26T00:00:00.000Z'),
          'label': '46'
        },{
          'date': new Date('2016-06-07T00:00:00.000Z'),
          'label': '47'
        },{
          'date': new Date('2016-08-02T00:00:00.000Z'),
          'label': '48'
        },{
          'date': new Date('2016-09-20T00:00:00.000Z'),
          'label': '49'
        }],
        "beta": [{
          'date': new Date('2015-06-03T00:00:00.000Z'),
          'label': '40'
        },{
          'date': new Date('2015-08-11T00:00:00.000Z'),
          'label': '41'
        },{
          'date': new Date('2015-09-22T00:00:00.000Z'),
          'label': '42'
        },{
          'date': new Date('2015-11-03T00:00:00.000Z'),
          'label': '43'
        },{
          'date': new Date('2015-12-15T00:00:00.000Z'),
          'label': '44'
        },{
          'date': new Date('2016-01-26T00:00:00.000Z'),
          'label': '45'
        },{
          'date': new Date('2016-03-08T00:00:00.000Z'),
          'label': '46'
        },{
          'date': new Date('2016-04-26T00:00:00.000Z'),
          'label': '47'
        },{
          'date': new Date('2016-06-07T00:00:00.000Z'),
          'label': '48'
        },{
          'date': new Date('2016-08-02T00:00:00.000Z'),
          'label': '49'
        },{
          'date': new Date('2016-09-19T00:00:00.000Z'),
          'label': '50'
        }],
        "aurora": [{
          'date': new Date('2015-06-03T00:00:00.000Z'),
          'label': '41'
        },{
          'date': new Date('2015-08-11T00:00:00.000Z'),
          'label': '42'
        },{
          'date': new Date('2015-09-22T00:00:00.000Z'),
          'label': '43'
        },{
          'date': new Date('2015-11-03T00:00:00.000Z'),
          'label': '44'
        },{
          'date': new Date('2015-12-15T00:00:00.000Z'),
          'label': '45'
        },{
          'date': new Date('2016-01-26T00:00:00.000Z'),
          'label': '46'
        },{
          'date': new Date('2016-03-08T00:00:00.000Z'),
          'label': '47'
        },{
          'date': new Date('2016-04-26T00:00:00.000Z'),
          'label': '48'
        },{
          'date': new Date('2016-06-07T00:00:00.000Z'),
          'label': '49'
        },{
          'date': new Date('2016-08-02T00:00:00.000Z'),
          'label': '50'
        },{
          'date': new Date('2016-09-19T00:00:00.000Z'),
          'label': '51'
        }],
        "nightly": [{
          'date': new Date('2015-06-03T00:00:00.000Z'),
          'label': '42'
        },{
          'date': new Date('2015-08-11T00:00:00.000Z'),
          'label': '43'
        },{
          'date': new Date('2015-09-22T00:00:00.000Z'),
          'label': '44'
        },{
          'date': new Date('2015-11-03T00:00:00.000Z'),
          'label': '45'
        },{
          'date': new Date('2015-12-15T00:00:00.000Z'),
          'label': '46'
        },{
          'date': new Date('2016-01-26T00:00:00.000Z'),
          'label': '47'
        },{
          'date': new Date('2016-03-08T00:00:00.000Z'),
          'label': '48'
        },{
          'date': new Date('2016-04-26T00:00:00.000Z'),
          'label': '49'
        },{
          'date': new Date('2016-06-07T00:00:00.000Z'),
          'label': '50'
        },{
          'date': new Date('2016-08-02T00:00:00.000Z'),
          'label': '51'
        },{
          'date': new Date('2016-09-19T00:00:00.000Z'),
          'label': '52'
        }]
    };
    
    var url = {
        "versions":"https://crash-stats.mozilla.com/api/ProductVersions/?product=Firefox",
        "adi":"https://crash-stats.mozilla.com/api/ADI/?"
    };
    
    var dates = {
        "start" : {
            "date": new Date((new Date()).valueOf()-365*24*60*60*1000),
            "string": convertDate(new Date((new Date()).valueOf()-365*24*60*60*1000), "dateToString")
        },
        "end" : {
            "date": new Date((new Date()).valueOf()-1*24*60*60*1000),
            "string": convertDate(new Date((new Date()).valueOf()-1*24*60*60*1000), "dateToString")
        }
    }
    
    var chartData = [];
    
    // First get a list of versions
    getVersions(url.versions, "release");
    
    function getVersions(query, channel) {
        var result = [];
        d3.json(query + "&build_type=" + channel, function(data) {
            if (!data) return new Error("Unable to load JSON data!");
            var i = 0;
            for (; i<data.hits.length; i++) {
                var start = convertDate(data.hits[i].start_date, "stringToDate");
                var end = convertDate(data.hits[i].end_date, "stringToDate");                
                if (start > dates.start.date) {
                    result.push(data.hits[i].version);
                }
            }
            if (i >= data.hits.length) {
                createQueryFromVersions(result, channel);
            }
        });
    }
    
    function createQueryFromVersions(versions, channel) {
        var query = url.adi
            + "end_date=" + dates.end.string
            + "&start_date=" + dates.start.string
            + "&platforms=Windows&platforms=Mac%20OS%20X&platforms=Linux"
            + "&product=Firefox";
        var i = 0;
        for (; i<versions.length; i++) {
            query = query + "&versions=" + versions[i];
        }
        if (i >= versions.length) {
            processVersionTotals(query, channel);
        }
    }
    
    function processVersionTotals(query, channel) {
        d3.json(query, function(data) {
            if (!data) return new Error("Unable to load JSON data!");
            var i = 0;
            for (; i<data.hits.length; i++) {
                var found = -1;
                if (chartData.length > 0) {
                    for (var j=0; j<chartData.length; j++) {
                        if (data.hits[i].date == chartData[j].date) {
                            chartData[j][channel] = chartData[j][channel] + data.hits[i].adi_count;
                            found = j;
                        }
                    }
                }
                if (found == -1) {
                    chartData.push({"date":data.hits[i].date, "release":0, "beta":0, "aurora":0, "nightly":0});
                    chartData[chartData.length-1][channel] = data.hits[i].adi_count;
                }
            }
            if (i >= data.hits.length) {
                if (channel == "release") {
                    getVersions(url.versions, "beta");
                } else if (channel == "beta") {
                    getVersions(url.versions, "aurora");
                } else if (channel == "aurora") {
                    getVersions(url.versions, "nightly");
                } else {
                    drawGraph();
                }
            }
            
        });
    }
    
    function convertDate(date, conversion) {
        var result = "";
        if (conversion == "dateToString") {
            var day = (date.getDate() < 10) ? '0' + date.getDate().toString() : date.getDate().toString();
            var month = ((date.getMonth()+1) < 10) ? '0' + (date.getMonth()+1).toString() : (date.getMonth()+1).toString();
            var year = date.getFullYear().toString();
            result = year + '-' + month + '-' + day;
        } else if (conversion == "stringToDate") {
            result = new Date();
            var string = date.split("-");
            result.setFullYear(string[0], string[1]-1, string[2]-1);
        }
        return result;
    }
        
    function drawGraph() {
        MG._hooks = {};
        data = MG.convert.date(chartData, 'date');
        MG.data_graphic({
            data: data,
            title: "Firefox Release ADIs",
            width: 1000,
            height: 300,
            right: 50,
            target: document.getElementById('chart_release'),
            x_accessor: "date",
            y_accessor:"release",
            interpolate: "monotone",
            chart_type: "line",
            linked: true,
            markers: markers.release
        });
        MG.data_graphic({
            data: data,
            title: "Firefox Beta ADIs",
            width: 1000,
            height: 300,
            right: 50,
            target: document.getElementById('chart_beta'),
            x_accessor: "date",
            y_accessor:"beta",
            interpolate: "monotone",
            chart_type: "line",
            linked: true,
            markers: markers.beta
        });
        MG.data_graphic({
            data: data,
            title: "Firefox Aurora ADIs",
            width: 1000,
            height: 300,
            right: 50,
            target: document.getElementById('chart_aurora'),
            x_accessor: "date",
            y_accessor:"aurora",
            interpolate: "monotone",
            chart_type: "line",
            linked: true,
            markers: markers.aurora
        });
        MG.data_graphic({
            data: data,
            title: "Firefox Nightly ADIs",
            width: 1000,
            height: 300,
            right: 50,
            target: document.getElementById('chart_nightly'),
            x_accessor: "date",
            y_accessor:"nightly",
            interpolate: "monotone",
            chart_type: "line",
            linked: true,
            markers: markers.nightly
        });
        
        var percent_data = [
            {"channel":"release", "quarter":0, "month":0, "half":0},
            {"channel":"beta", "quarter":0, "month":0, "half":0},
            {"channel":"aurora", "quarter":0, "month":0, "half":0},
            {"channel":"nightly", "quarter":0, "month":0, "half":0}
        ];
        
        // Set the initial value needed to calculate percent change
        for (var i=0; i<chartData.length; i++) {
            var dateToFind = {
                "month":convertDate(new Date(dates.end.date-28*24*60*60*1000), "dateToString"),
                "quarter":convertDate(new Date(dates.end.date-84*24*60*60*1000), "dateToString"),
                "half":convertDate(new Date(dates.end.date-182*24*60*60*1000), "dateToString")
            };
            
            if (convertDate(chartData[i].date, "dateToString")  == dateToFind.quarter) {
                for (var j=0; j<percent_data.length; j++) {
                    percent_data[j].quarter = chartData[i][percent_data[j].channel];
                }
            }
            
            if (convertDate(chartData[i].date, "dateToString")  == dateToFind.month) {
                for (var j=0; j<percent_data.length; j++) {
                    percent_data[j].month = chartData[i][percent_data[j].channel];
                }
            }
            
            if (convertDate(chartData[i].date, "dateToString")  == dateToFind.half) {
                for (var j=0; j<percent_data.length; j++) {
                    percent_data[j].half = chartData[i][percent_data[j].channel];
                }
            }
        }
        
        for (var i=0; i<chartData.length; i++) {
            if (convertDate(chartData[i].date, "dateToString")  == dates.end.string) {
                for (var j=0; j<percent_data.length; j++) {
                    percent_data[j].quarter = (chartData[i][percent_data[j].channel] - percent_data[j].quarter) / chartData[i][percent_data[j].channel] * 100;
                    percent_data[j].month = (chartData[i][percent_data[j].channel] - percent_data[j].month) / chartData[i][percent_data[j].channel] * 100;
                    percent_data[j].half = (chartData[i][percent_data[j].channel] - percent_data[j].half) / chartData[i][percent_data[j].channel] * 100;
                }
            }
        }
        
        MG.data_graphic({
            data: percent_data,
            title: "Percent Change ADIs (3 months)",
            width: 500,
            height: 150,
            target: document.getElementById('chart_percent_change_quarter'),
            x_accessor: "quarter",
            y_accessor:"channel",
            chart_type: "bar"
        });
        
        MG.data_graphic({
            data: percent_data,
            title: "Percent Change ADIs (1 month)",
            width: 500,
            height: 150,
            target: document.getElementById('chart_percent_change_month'),
            x_accessor: "month",
            y_accessor:"channel",
            chart_type: "bar"
        });
        
        MG.data_graphic({
            data: percent_data,
            title: "Percent Change ADIs (6 months)",
            width: 500,
            height: 150,
            target: document.getElementById('chart_percent_change_half'),
            x_accessor: "half",
            y_accessor:"channel",
            chart_type: "bar"
        });
        
        
    }
</script>
